title:      "Reading 01: Sequence Containers"
icon:       fa-book
navigation:
  - name: "Home"
    link: "index.html"
    icon: "fa-gavel"
internal:
external:
body:       |

    **Everyone**:

    Next week, we will work on problems related to [sequence containers] such
    as [arrays], [lists], [stacks], and [queues].  While these are rather basic
    data structures, it is important to understand their properties and
    behavior, which we will take advantage of in [Challenge 01] and [Challenge
    02].

    [arrays]:   https://en.wikipedia.org/wiki/Dynamic_array
    [lists]:    https://en.wikipedia.org/wiki/Linked_list
    [stacks]:   https://en.wikipedia.org/wiki/Stack_(abstract_data_type)
    [queues]:   https://en.wikipedia.org/wiki/Queue_(abstract_data_type)

    [Challenge 01]: challenge01.html
    [Challenge 02]: challenge02.html
    [sequence containers]:  https://en.wikipedia.org/wiki/Sequence_container_(C%2B%2B)

    ## Reading

    The readings for this week are:

    1. [Competitive Programmer's Handbook]

        - Chapter 4 Data Structures

            - 4.1 Dynamic arrays

            - 4.4 Iterators and ranges

            - 4.5 Other structures

            - 4.6 Comparison to sorting

    2. [Interview Cake]

        - [Array](https://www.interviewcake.com/concept/cpp/array)
        - [Dynamic Array](https://www.interviewcake.com/concept/cpp/dynamic-array)
        - [Linked List](https://www.interviewcake.com/concept/cpp/linked-list)
        - [Stack](https://www.interviewcake.com/concept/cpp/stack)
        - [Queue](https://www.interviewcake.com/concept/cpp/queue)

    ### Optional

    If you are interested in knowing a little more about [C++] `auto` loops, then
    check out the following:

    1. [Ranged-based for Statement (C++)](https://msdn.microsoft.com/en-us/library/jj203382.aspx)

    2. [Iterators](https://msdn.microsoft.com/en-us/library/28f7db1d.aspx)

    If you are interested in knowing how to utilize [lists] in [Python] as
    [stacks] and [queues], the check out the following:

    1. [Data Structures - More on Lists](https://docs.python.org/3/tutorial/datastructures.html#more-on-lists)

    ## Quiz

    Once you have done the readings, answer the following [Reading 01 Quiz]
    questions:

    <div id="quiz-questions"></div>

    <div id="quiz-responses"></div>

    <script src="static/js/dredd-quiz.js"></script>
    <script>
    loadQuiz('static/json/reading01.json');
    </script>

    <pre style="display: none;" id="dr-container" class="codehilite"><code id="dredd-response"></code></pre>

    ## Submission

    To submit you work, follow the same process outlined in [Reading 00]:

        :::bash
        $ git checkout master                 # Make sure we are in master branch
        $ git pull --rebase                   # Make sure we are up-to-date with GitHub

        $ git checkout -b reading01           # Create reading01 branch and check it out

        $ cd reading01                        # Go into reading01 folder
        $ $EDITOR answers.json                # Edit your answers.json file

        $ ../.scripts/check.py                # Check reading01 quiz
        Checking reading01 quiz ...
              Q1 0.60
              Q2 0.60
              Q3 0.90
              Q4 0.90
           Score 3.00 / 3.00
          Status Success

        $ git add answers.json                # Add answers.json to staging area
        $ git commit -m "Reading 01: Done"    # Commit work

        $ git push -u origin reading01        # Push branch to GitHub

    <div class="alert alert-success" markdown="1">
    #### <i class="fa fa-github"></i> Pull Request

    Once you have committed your work and pushed it to [GitHub], remember to
    create a **pull request** and assign it to the appropriate **teaching
    assistant** from the [Reading 01 TA List].

    </div>

    [GitHub]:                               https://github.com
    [Reading 00]:                           reading00.html
    [Reading 01 Quiz]:                      static/json/reading01.json
    [JSON]:                                 http://www.json.org/
    [git-branch]:                           https://git-scm.com/docs/git-branch
    [dredd]:                                https://dredd.h4x0r.space
    [Reading 01 TA List]:                   reading01_tas.html
    [Competitive Programmer's Handbook]:    https://cses.fi/book.html
    [Interview Cake]:                       https://www.interviewcake.com/
    [C++]:                                  https://isocpp.org/
    [Python]:                               https://www.python.org
